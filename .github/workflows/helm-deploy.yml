name: Deploy to microk8s

on:
  workflow_run:
    workflows: ["Docker Build and Push"]
    types:
      - completed
jobs:
  deploy:
    runs-on: self-hosted
    strategy:
      matrix:
        service: [user, club, vote]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install and configure microk8s
      run: |
        lxc exec microk8s -- microk8s.config > ~/.kube/config
    - name: Deploy the Helm chart
      id: deploy-helm-chart
      run: |
          lxc exec microk8s -- microk8s helm upgrade --install ${{ matrix.service }}-svc /tmp/${{ github.sha }}/wp/${{ matrix.service }}/deploy/${{ matrix.service }}-svc --set image.tag=${{ github.sha }}  --set service.port=8080 --set service.type=NodePort
    - name: Wait for deployment to be ready
      run: |
        lxc exec microk8s -- microk8s kubectl wait --for=condition=available --timeout=600s deployment/${{ matrix.service }}-svc
    - name: Get env variables
      if: steps.deploy-helm-chart.outcome == 'success'
      env:
        SERVICE_NAME: ${{ matrix.service }}-svc
      run: |
        HOST=$(kubectl describe svc $SERVICE_NAME | grep 'NodePort:' | awk '{print $3}')
        PORT=$(kubectl get svc $SERVICE_NAME -o jsonpath='{.spec.ports[0].nodePort}')
        echo "{\"host\":\"10.152.183.33\",\"port\":8080}" | jq . > ${{ matrix.service }}-env.json
    - name: push file to lxc Container
      run: |
        lxc file push ${{ matrix.service }}-env.json microk8s/tmp/${{ github.sha }}/wp/${{ matrix.service }}/deploy/${{matrix.service}}-svc/${{matrix.service}}-env.json
    - name: Run postman collection
      if: matrix.service == 'vote'
      run: |
        lxc exec microk8s -- newman run /tmp/${{ github.sha }}/wp/${{ matrix.service }}/deploy/${{matrix.service}}-svc/${{matrix.service}}-svc-test.json -e /tmp/${{ github.sha }}/wp/${{ matrix.service }}/deploy/${{matrix.service}}-svc/${{matrix.service}}-env.json 
