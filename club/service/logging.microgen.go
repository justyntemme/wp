// Code generated by microgen 1.0.4. DO NOT EDIT.

package service

import (
	"context"
	log "github.com/go-kit/kit/log"
	service "github.com/justyntemme/wp/club"
	"time"
)

// LoggingMiddleware writes params, results and working time of method call to provided logger after its execution.
func LoggingMiddleware(logger log.Logger) Middleware {
	return func(next service.ClubService) service.ClubService {
		return &loggingMiddleware{
			logger: logger,
			next:   next,
		}
	}
}

type loggingMiddleware struct {
	logger log.Logger
	next   service.ClubService
}

func (M loggingMiddleware) GetClubById(arg0 context.Context, arg1 string) (res0 string, res1 error) {
	defer func(begin time.Time) {
		M.logger.Log(
			"method", "GetClubById",
			"message", "GetClubById called",
			"request", logGetClubByIdRequest{Id: arg1},
			"response", logGetClubByIdResponse{Result: res0},
			"err", res1,
			"took", time.Since(begin))
	}(time.Now())
	return M.next.GetClubById(arg0, arg1)
}

func (M loggingMiddleware) GetTopClubs(arg0 context.Context, arg1 int32) (res0 string, res1 error) {
	defer func(begin time.Time) {
		M.logger.Log(
			"method", "GetTopClubs",
			"message", "GetTopClubs called",
			"request", logGetTopClubsRequest{Limit: arg1},
			"response", logGetTopClubsResponse{Result: res0},
			"err", res1,
			"took", time.Since(begin))
	}(time.Now())
	return M.next.GetTopClubs(arg0, arg1)
}

func (M loggingMiddleware) GetTopClubsNearMe(arg0 context.Context, arg1 int32) (res0 string, res1 error) {
	defer func(begin time.Time) {
		M.logger.Log(
			"method", "GetTopClubsNearMe",
			"message", "GetTopClubsNearMe called",
			"request", logGetTopClubsNearMeRequest{Limit: arg1},
			"response", logGetTopClubsNearMeResponse{Result: res0},
			"err", res1,
			"took", time.Since(begin))
	}(time.Now())
	return M.next.GetTopClubsNearMe(arg0, arg1)
}

func (M loggingMiddleware) GetAllClubsNearMe(arg0 context.Context, arg1 int32) (res0 string, res1 error) {
	defer func(begin time.Time) {
		M.logger.Log(
			"method", "GetAllClubsNearMe",
			"message", "GetAllClubsNearMe called",
			"request", logGetAllClubsNearMeRequest{Limit: arg1},
			"response", logGetAllClubsNearMeResponse{Result: res0},
			"err", res1,
			"took", time.Since(begin))
	}(time.Now())
	return M.next.GetAllClubsNearMe(arg0, arg1)
}

type (
	logGetClubByIdRequest struct {
		Id string
	}
	logGetClubByIdResponse struct {
		Result string
	}
	logGetTopClubsRequest struct {
		Limit int32
	}
	logGetTopClubsResponse struct {
		Result string
	}
	logGetTopClubsNearMeRequest struct {
		Limit int32
	}
	logGetTopClubsNearMeResponse struct {
		Result string
	}
	logGetAllClubsNearMeRequest struct {
		Limit int32
	}
	logGetAllClubsNearMeResponse struct {
		Result string
	}
)
