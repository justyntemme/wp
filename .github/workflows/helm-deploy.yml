name: Deploy to microk8s

on:
  workflow_run:
    workflows: ["Docker Build and Push"]
    types:
      - completed
jobs:
  deploy:
    runs-on: self-hosted
    strategy:
      matrix:
        service: [user, club, vote]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Install and configure microk8s
      run: |
        lxc exec microk8s -- microk8s.config > ~/.kube/config

    # - name: Login to Docker Hub
    #   run: |
    #     echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
    # - name: pull down docker image
    #   run: |
    #     docker -H unix:///var/snap/microk8s/current/docker.sock pull justyntemme/${{ matrix.service }}-svc:${{ github.sha }}
    # - name: import docker image into microk8s
    #   run: |
    #     
    #     docker tag localhost:32000/justyntemme/${{ matrix.service }}-svc:${{ github.sha }} localhost:32000justyntemme/${{ matrix.service }}-svc:$IMAGE_TAG
    #     # docker save justyntemme/${{ matrix.service }}-svc:${{ github.sha }} | microk8s docker image import -
    # - name: Copy directory to LXC Container
    #   id: copy-files
    #   run: |
    #     IMAGE_TAG=$(date +%s)
    #     lxc file push ./ microk8s/tmp/${{ github.sha }} --recursive
    - name: Deploy the Helm chart
      id: deploy-helm-chart
      run: |
          lxc exec microk8s -- microk8s helm upgrade --install ${{ matrix.service }}-svc /tmp/${{ github.sha }}/wp/${{ matrix.service }}/deploy/${{ matrix.service }}-svc --set image.tag=${{ github.sha }}  
          # --set image.repository=docker.io/justyntemme/${{ matrix.service }}-svc-${{ github.sha }}
    - name: Wait for deployment to be ready
      run: |
        lxc exec microk8s -- microk8s kubectl wait --for=condition=available --timeout=600s deployment/${{ matrix.service }}-svc
    - name: Get env variables
      if: steps.deploy-helm-chart.outcome == 'success'
      env:
        SERVICE_NAME: ${{ matrix.service }}-svc-${{ github.sha }}
      run: |
        HOST=$(kubectl describe svc $SERVICE_NAME | grep 'NodePort:' | awk '{print $3}')
        PORT=$(kubectl get svc $SERVICE_NAME -o jsonpath='{.spec.ports[0].nodePort}')
        echo "{\"host\":\"$HOST\",\"port\":$PORT}" | jq . > ${{ matrix.service }}-env.json

    - name: Run postman collection
      run: |
        lxc exec microk8s -- newman run -e ${{ matrix.service }}-env.json wp-postman-collection.json
